import math

# Define the player and AI symbols
HUMAN = 'X'
AI = 'O'
EMPTY = ' '

# Define the board
def create_board():
    return [[EMPTY, EMPTY, EMPTY],
            [EMPTY, EMPTY, EMPTY],
            [EMPTY, EMPTY, EMPTY]]

# Check for a winner or a draw
def check_winner(board):
    # Check rows
    for row in board:
        if row[0] == row[1] == row[2] != EMPTY:
            return row[0]
    # Check columns
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] != EMPTY:
            return board[0][col]
    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] != EMPTY:
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != EMPTY:
        return board[0][2]
    # Check for a draw
    if all(board[row][col] != EMPTY for row in range(3) for col in range(3)):
        return 'DRAW'
    return None

# Minimax algorithm
def minimax(board, depth, is_maximizing):
    winner = check_winner(board)
    if winner == AI:
        return 1
    elif winner == HUMAN:
        return -1
    elif winner == 'DRAW':
        return 0

    if is_maximizing:
        best_score = -math.inf
        for row in range(3):
            for col in range(3):
                if board[row][col] == EMPTY:
                    board[row][col] = AI
                    score = minimax(board, depth + 1, False)
                    board[row][col] = EMPTY
                    best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for row in range(3):
            for col in range(3):
                if board[row][col] == EMPTY:
                    board[row][col] = HUMAN
                    score = minimax(board, depth + 1, True)
                    board[row][col] = EMPTY
                    best_score = min(score, best_score)
        return best_score

# Get the best move for the AI
def best_move(board):
    best_score = -math.inf
    move = None
    for row in range(3):
        for col in range(3):
            if board[row][col] == EMPTY:
                board[row][col] = AI
                score = minimax(board, 0, False)
                board[row][col] = EMPTY
                if score > best_score:
                    best_score = score
                    move = (row, col)
    return move

# Print the board
def print_board(board):
    for row in board:
        print('|'.join(row))
        print('-' * 5)

# Main function to play the game
def play_game():
    board = create_board()
    print_board(board)

    while True:
        # Human turn
        human_row = int(input("Enter row (0-2): "))
        human_col = int(input("Enter column (0-2): "))
        if board[human_row][human_col] == EMPTY:
            board[human_row][human_col] = HUMAN
        else:
            print("Invalid move! Try again.")
            continue

        print_board(board)

        if check_winner(board):
            break

        # AI turn
        ai_move = best_move(board)
        if ai_move:
            board[ai_move[0]][ai_move[1]] = AI

        print_board(board)

        if check_winner(board):
            break

    winner = check_winner(board)
    if winner == 'DRAW':
        print("It's a draw!")
    else:
        print(f"The winner is {winner}!")

if _name_ == '_main_':
    play_game()
